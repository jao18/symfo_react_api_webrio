server {
    # you can use those domain, if and only if you added them to
    # your local /etc/hosts
    server_name localhost;
    root /var/www/api/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        # Here I used the docker service name and port for `php-fpm`
        fastcgi_pass api:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;

        # Wide-open CORS config for nginx
        # https://enable-cors.org/server_nginx.html
#         if ($request_method = 'OPTIONS') {
#            add_header 'Access-Control-Allow-Origin' '*';
#            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#            #
#            # Custom headers and headers various browsers *should* be OK with but aren't
#            #
#            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#            #
#            # Tell client that this pre-flight info is valid for 20 days
#            #
#            add_header 'Access-Control-Max-Age' 1728000;
#            add_header 'Content-Type' 'text/plain; charset=utf-8';
#            add_header 'Content-Length' 0;
#            return 204;
#         }
#         if ($request_method = 'POST') {
#            add_header 'Access-Control-Allow-Origin' '*' always;
#            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#         }
#         if ($request_method = 'GET') {
#            add_header 'Access-Control-Allow-Origin' '*' always;
#            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#         }
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/api_error.log;
    access_log /var/log/nginx/api_access.log;
}